-- must be first statement
SET LOCK_MODE 0;
DROP ALL OBJECTS;

CREATE ALIAS IF NOT EXISTS IS_SUSPEND_RANGE FOR "com.qooco.boost.controllers.BaseMvcTest.IS_SUSPEND_RANGE";
CREATE ALIAS IF NOT EXISTS SYS_EXTRACT_UTC FOR "com.qooco.boost.controllers.BaseMvcTest.SYS_EXTRACT_UTC";
CREATE ALIAS IF NOT EXISTS TO_CLOB FOR "com.qooco.boost.controllers.BaseMvcTest.TO_CLOB";
CREATE ALIAS IF NOT EXISTS GET_DISPLAY_NAME FOR "com.qooco.boost.controllers.BaseMvcTest.GET_DISPLAY_NAME";

CREATE TABLE IF NOT EXISTS "COUNTRY"
(	"COUNTRY_ID" NUMBER NOT NULL,
     "COUNTRY_NAME" NVARCHAR2(255) NOT NULL,
     "COUNTRY_CODE" VARCHAR2(10) NOT NULL,
     "PHONE_CODE" VARCHAR2(10) NOT NULL,
     "IS_DELETED" NUMBER DEFAULT '1' NOT NULL,
     CONSTRAINT "COUNTRY_PK" PRIMARY KEY ("COUNTRY_ID")
);


CREATE TABLE IF NOT EXISTS "USER_PROFILE"
(	"USER_PROFILE_ID" NUMBER NOT NULL,
     "USERNAME" VARCHAR2(255) NOT NULL,
     "FIRST_NAME" NVARCHAR2(255),
     "LAST_NAME" NVARCHAR2(255),
     "GENDER" NUMBER(99,0),
     "AVATAR" VARCHAR2(2000),
     "BIRTHDAY" DATE,
     "PHONE_NUMBER" VARCHAR2(255),
     "ADDRESS" NVARCHAR2(255),
     "COUNTRY_ID" NUMBER,
     "NATIONAL_ID" VARCHAR2(255),
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "IS_DELETED" NUMBER(99,0) DEFAULT 0 NOT NULL,
     "EMAIL" VARCHAR2(255),
     "IS_ADMIN" NUMBER(1,0) NOT NULL,
     "DEFAULT_COMPANY" NUMBER,
     "CITY_ID" NUMBER,
     "PROFILE_STEP" NUMBER,
     "PERSONAL_PHOTO" CLOB,
     "FIT_FIRST_NAME" NVARCHAR2(255),
     "FIT_LAST_NAME" NVARCHAR2(255),
     "FIT_AVATAR" VARCHAR2(2000),
     "FIT_GENDER" NUMBER(99,0),
     "FIT_PHONE_NUMBER" VARCHAR2(255),
     "FIT_BIRTHDAY" TIMESTAMP (6),
     "FIT_NATIONAL_ID" VARCHAR2(255),
     "FIT_PERSONAL_PHOTO" CLOB,
     "FIT_ADDRESS" NVARCHAR2(255),
     "FIT_PROFILE_STEP" NUMBER(99,0),
     CONSTRAINT "USER_PROFILE_PK" PRIMARY KEY ("USER_PROFILE_ID"),
     CONSTRAINT "USER_PROFILE_TO_COUNTRY" FOREIGN KEY ("COUNTRY_ID") REFERENCES "COUNTRY" ("COUNTRY_ID")
);

CREATE TABLE IF NOT EXISTS "USER_ACCESS_TOKEN"
(	"USER_PROFILE_ID" NUMBER(99,0) NOT NULL,
     "TOKEN" VARCHAR2(255) NOT NULL,
     "REFRESH_TOKEN" VARCHAR2(255) NOT NULL,
     "TYPE" NUMBER(2,0) NOT NULL,
     "ACCESS_TOKEN_ID" NUMBER NOT NULL,
     "CHANNEL_ID" VARCHAR2(255),
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "SIGN_IN_ID" VARCHAR2(200),
     "SESSION_ID" VARCHAR2(200),
     "DEVICE_TYPE" NUMBER DEFAULT '0' NOT NULL,
     "PUBLIC_KEY" VARCHAR2(4000),
     "COMPANY_ID" NUMBER,
     CONSTRAINT "ACCESS_TOKEN_PK" PRIMARY KEY ("ACCESS_TOKEN_ID"),
     CONSTRAINT "ACCESS_TOKEN_TO_USER_PROFILE" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_PROFILE" ("USER_PROFILE_ID")
);


CREATE TABLE IF NOT EXISTS "PROVINCE"
(	"PROVINCE_ID" NUMBER NOT NULL,
     "COUNTRY_ID" NUMBER NOT NULL,
     "NAME" NVARCHAR2(255) NOT NULL,
     "TYPE" NUMBER,
     "CODE" NVARCHAR2(20) NOT NULL,
     "IS_DELETED" NUMBER,
     CONSTRAINT "PROVICE_PK" PRIMARY KEY ("PROVINCE_ID"),
     CONSTRAINT "PROVINCE_TO_COUNTRY" FOREIGN KEY ("COUNTRY_ID")
         REFERENCES "COUNTRY" ("COUNTRY_ID")
);


CREATE TABLE IF NOT EXISTS "CITY"
(	"CITY_ID" NUMBER NOT NULL,
     "PROVINCE_ID" NUMBER NOT NULL,
     "CITY_NAME" NVARCHAR2(255) NOT NULL,
     "LATITUDE" NUMBER(3,0),
     "LONGITUDE" NUMBER(3,0),
     "IS_DELETED" NUMBER,
     CONSTRAINT "CITY_PK" PRIMARY KEY ("CITY_ID"),
     CONSTRAINT "CITY_TO_PROVINCE" FOREIGN KEY ("PROVINCE_ID")
         REFERENCES "PROVINCE" ("PROVINCE_ID")
);

CREATE TABLE IF NOT EXISTS "HOTEL_TYPE"
(	"HOTEL_TYPE_ID" NUMBER NOT NULL,
     "HOTEL_TYPE_NAME" NVARCHAR2(255) NOT NULL,
     CONSTRAINT "HOTEL_TYPE_PK" PRIMARY KEY ("HOTEL_TYPE_ID")
);


CREATE TABLE IF NOT EXISTS "COMPANY"
(	"COMPANY_ID" NUMBER NOT NULL,
     "COMPANY_NAME" NVARCHAR2(50) NOT NULL,
     "LOGO" VARCHAR2(2000) NOT NULL,
     "CITY_ID" NUMBER NOT NULL,
     "ADDRESS" NVARCHAR2(50),
     "PHONE" VARCHAR2(15) NOT NULL,
     "EMAIL" NVARCHAR2(255) NOT NULL,
     "WEB" VARCHAR2(100),
     "AMADEUS" VARCHAR2(10),
     "GALILEO" VARCHAR2(10),
     "WORLDSPAN" VARCHAR2(10),
     "SABRE" VARCHAR2(10),
     "HOTEL_TYPE_ID" NUMBER,
     "DESCRIPTION" NVARCHAR2(2000),
     "STATUS" NUMBER(3,0) NOT NULL,
     "CREATED_BY" NUMBER(99,0),
     "CREATED_DATE" DATE NOT NULL,
     "UPDATED_BY" NUMBER(99,0),
     "UPDATED_DATE" DATE NOT NULL,
     "IS_DELETED" NUMBER(1,0) NOT NULL,
     CONSTRAINT "COMPANY_PK" PRIMARY KEY ("COMPANY_ID"),
     CONSTRAINT "COMPANY_TO_CITY" FOREIGN KEY ("CITY_ID")
         REFERENCES "CITY" ("CITY_ID"),
     CONSTRAINT "COMPANY_TO_HOTEL_TYPE" FOREIGN KEY ("HOTEL_TYPE_ID")
         REFERENCES "HOTEL_TYPE" ("HOTEL_TYPE_ID")
);

CREATE TABLE IF NOT EXISTS "ROLE_COMPANY"
(	"ROLE_ID" NUMBER NOT NULL,
     "NAME" NVARCHAR2(255) NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "IS_DELETED" NUMBER DEFAULT 0 NOT NULL,
     "DISPLAY_NAME" NVARCHAR2(255) NOT NULL,
     CONSTRAINT "ROLE_COMPANY_PK" PRIMARY KEY ("ROLE_ID")
);

CREATE TABLE IF NOT EXISTS "STAFF"
(	"STAFF_ID" NUMBER NOT NULL,
     "USER_PROFILE_ID" NUMBER NOT NULL,
     "COMPANY_ID" NUMBER NOT NULL,
     "ROLE_ID" NUMBER NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "CREATED_DATE" DATE NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" DATE NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     CONSTRAINT "STAFF_PK" PRIMARY KEY ("STAFF_ID"),
     CONSTRAINT "STAFF_TO_COMPANY" FOREIGN KEY ("COMPANY_ID")
         REFERENCES "COMPANY" ("COMPANY_ID"),
     CONSTRAINT "STAFF_TO_ROLE_COMPANY" FOREIGN KEY ("ROLE_ID")
         REFERENCES "ROLE_COMPANY" ("ROLE_ID"),
     CONSTRAINT "STAFF_TO_USER_PROFILE" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_PROFILE" ("USER_PROFILE_ID")
);


CREATE TABLE IF NOT EXISTS "CLIENT_INFO"
(	"TOKEN" NVARCHAR2(255) NOT NULL,
     "APP_ID" NVARCHAR2(255) NOT NULL,
     "APP_VERSION" NVARCHAR2(255) NOT NULL,
     "DEVICE_MODEL" NVARCHAR2(255),
     "PLATFORM" NVARCHAR2(255) NOT NULL,
     "OS_VERSION" NVARCHAR2(255),
     "DEVICE_TOKEN" NVARCHAR2(255),
     "USER_PROFILE_ID" NUMBER NOT NULL,
     "LOGIN_TIME" TIMESTAMP (6) NOT NULL,
     "LOGOUT_TIME" TIMESTAMP (6),
     "CHANNEL_ID" VARCHAR2(255),
     CONSTRAINT "PK_CLIENT_INFO" PRIMARY KEY ("TOKEN")
);


CREATE OR REPLACE VIEW VIEW_ACCESS_TOKEN_ROLES
    (USER_PROFILE_ID,IS_ADMIN,USERNAME,TOKEN,SIGN_IN_ID,SESSION_ID,CHANNEL_ID,DEVICE_TYPE,COMPANY_ID,"TYPE",PLATFORM, APP_ID,ROLE_NAME,UPDATED_DATE,PUBLIC_KEY)
AS
SELECT DISTINCT
    uat.USER_PROFILE_ID,
    (SELECT up.IS_ADMIN FROM USER_PROFILE up WHERE up.USER_PROFILE_ID = uat.USER_PROFILE_ID) AS IS_ADMIN,
    (SELECT up.USERNAME FROM USER_PROFILE up WHERE up.USER_PROFILE_ID = uat.USER_PROFILE_ID) AS USERNAME,
    uat.TOKEN,
    uat.SIGN_IN_ID,
    uat.SESSION_ID,
    uat.CHANNEL_ID,
    uat.DEVICE_TYPE,
    uat.COMPANY_ID,
    uat.TYPE,
    (SELECT ci.PLATFORM FROM CLIENT_INFO ci WHERE ci.TOKEN = uat.TOKEN) AS PLATFORM,
    (SELECT ci.APP_ID FROM CLIENT_INFO ci WHERE ci.TOKEN = uat.TOKEN) AS APP_ID,
    (SELECT rc.NAME FROM ROLE_COMPANY rc WHERE rc.ROLE_ID = st.ROLE_ID) AS ROLE_NAME,
    uat.UPDATED_DATE,
    uat.PUBLIC_KEY
FROM USER_ACCESS_TOKEN uat
         LEFT JOIN STAFF st ON st.USER_PROFILE_ID = uat.USER_PROFILE_ID AND st.COMPANY_ID = uat.COMPANY_ID  AND st.IS_DELETED = 0;

CREATE TABLE IF NOT EXISTS "LANGUAGE"
(	"LANGUAGE_ID" NUMBER NOT NULL,
     "NAME" NVARCHAR2(255) NOT NULL,
     "CODE" NVARCHAR2(255) NOT NULL,
     "IS_DELETED" NUMBER(99,0) DEFAULT 0 NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" DATE,
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" DATE,
     CONSTRAINT "LANGUAGUE_PK" PRIMARY KEY ("LANGUAGE_ID")
);


CREATE TABLE IF NOT EXISTS "USER_FIT_LANGUAGE"
(	"USER_FIT_LANGUAGE_ID" NUMBER NOT NULL,
     "IS_NATIVE" NUMBER(99,0) DEFAULT 1,
     "LANGUAGE_ID" NUMBER(99,0) NOT NULL,
     "USER_PROFILE_ID" NUMBER NOT NULL,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_DATE" TIMESTAMP (6),
     "CREATED_BY" NUMBER,
     "UPDATED_BY" NUMBER,
     "IS_DELETED" NUMBER,
     CONSTRAINT "PK_USER_FIT_LANGUAGE" PRIMARY KEY ("USER_FIT_LANGUAGE_ID"),
     CONSTRAINT "fk-user-fit-language-id" FOREIGN KEY ("LANGUAGE_ID")
         REFERENCES "LANGUAGE" ("LANGUAGE_ID"),
     CONSTRAINT "fk-user-fit-language-user-id" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_PROFILE" ("USER_PROFILE_ID")
);


CREATE TABLE IF NOT EXISTS "APP_VERSION"
(	"APP_VERSION_ID" NUMBER NOT NULL,
     "APP_ID" VARCHAR2(100) DEFAULT '1.0' NOT NULL,
     "OS" VARCHAR2(100) DEFAULT '1.0' NOT NULL,
     "IS_FORCE_UPDATE" NUMBER(1,0) DEFAULT 0 NOT NULL,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_DATE" TIMESTAMP (6),
     "APP_VERSION" NUMBER(99,0) DEFAULT '1',
     "APP_VERSION_NAME" VARCHAR2(100) DEFAULT '1.0.0',
     CONSTRAINT "PK_APP_VERSION" PRIMARY KEY ("APP_VERSION_ID")
);

--CREATE SEQUENCE IF NOT EXISTS APP_VERSION_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "CURRENCY"
(	"CURRENCY_ID" NUMBER NOT NULL,
	"CODE" VARCHAR2(20) NOT NULL,
	"NAME" NVARCHAR2(255) NOT NULL,
	"UNIT_PER_USD" NUMBER(14,4) NOT NULL,
	"USD_PER_UNIT" NUMBER(18,5),
	"MIN_SALARY" NUMBER(10,0) DEFAULT 1 NOT NULL,
	"MAX_SALARY" NUMBER(10,0) DEFAULT 1 NOT NULL,
	"SYMBOL" VARCHAR2(20),
	 CONSTRAINT "CURRENCY_CODE_UK" UNIQUE ("CODE"),
	 CONSTRAINT "CURRENCY_PK" PRIMARY KEY ("CURRENCY_ID")
);


CREATE TABLE IF NOT EXISTS "BENEFIT"
(	"BENEFIT_ID" NUMBER NOT NULL,
	"DESCRIPTION" VARCHAR2(200) NOT NULL,
	"NAME" VARCHAR2(1000) NOT NULL,
	"CREATED_BY" NUMBER,
	"CREATED_DATE" TIMESTAMP (6) NOT NULL,
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" TIMESTAMP (6) NOT NULL,
	"IS_DELETED" NUMBER(99,0) NOT NULL,
	 CONSTRAINT "BENEFIT_PK" PRIMARY KEY ("BENEFIT_ID")
);


CREATE TABLE IF NOT EXISTS "WORKING_HOUR"
(	"WORKING_HOUR_ID" NUMBER NOT NULL,
	"WORKING_HOUR_DESCRIPTION" NVARCHAR2(255) NOT NULL,
	"START_TIME" VARCHAR2(8) NOT NULL,
	"END_TIME" VARCHAR2(8) NOT NULL,
	"WORKING_TYPE" NUMBER(1,0) NOT NULL,
	 CONSTRAINT "WORKING_HOUR_PK" PRIMARY KEY ("WORKING_HOUR_ID")
);


CREATE TABLE IF NOT EXISTS "EDUCATION"
(	"EDUCATION_ID" NUMBER NOT NULL,
	"NAME" NVARCHAR2(64) NOT NULL,
	"DESCRIPTION" VARCHAR2(255) NOT NULL,
	 CONSTRAINT "EDUCATION_PK" PRIMARY KEY ("EDUCATION_ID")
);


CREATE TABLE IF NOT EXISTS "SOFT_SKILL"
(	"SOFT_SKILL_ID" NUMBER NOT NULL,
	"NAME" VARCHAR2(255) NOT NULL,
	"DESCRIPTION" VARCHAR2(255),
	"IS_DELETED" NUMBER(99,0) NOT NULL,
	"CREATED_BY" NUMBER,
	"CREATED_DATE" TIMESTAMP (6) NOT NULL,
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" TIMESTAMP (6) NOT NULL,
	 CONSTRAINT "SOFT_SKILL_PK" PRIMARY KEY ("SOFT_SKILL_ID")
);


CREATE TABLE IF NOT EXISTS "ASSESSMENT"
(	"ASSESSMENT_ID" NUMBER NOT NULL,
	"NAME" VARCHAR2(128),
	"PRICE" NUMBER(12,2),
	"PICTURE" VARCHAR2(1000),
	"NUMBER_COMPANY_REQUIRE" NUMBER,
	"CREATED_BY" NUMBER,
	"CREATED_DATE" DATE NOT NULL,
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" DATE NOT NULL,
	"IS_DELETED" NUMBER(99,0) DEFAULT 1 NOT NULL,
	"SCALE_ID" NVARCHAR2(20),
	"MAPPING_ID" NVARCHAR2(20),
	"TYPE" NUMBER,
	"PACKAGE_ID" NUMBER,
	"TOPIC_ID" NUMBER,
	"CATEGORY_ID" NUMBER,
	"TIME_LIMIT" NUMBER,
	 CONSTRAINT "EXPERTISE_ASSESSMENT_PK" PRIMARY KEY ("ASSESSMENT_ID")
);


CREATE TABLE IF NOT EXISTS "ASSESSMENT_LEVEL"
(	"ASSESSMENT_LEVEL_ID" NUMBER NOT NULL,
	"ASSESSMENT_LEVEL_NAME" VARCHAR2(20) NOT NULL,
	"ASSESSMENT_LEVEL_VALUE" VARCHAR2(20) NOT NULL,
	"CREATED_BY" NUMBER,
	"CREATED_DATE" DATE NOT NULL,
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" DATE NOT NULL,
	"IS_DELETED" NUMBER(99,0) NOT NULL,
	"SCALE_ID" NVARCHAR2(20),
	"MAPPING_ID" NVARCHAR2(20),
	"ASSESSMENT_LEVEL_DESC" NVARCHAR2(20),
	"ASSESSMENT_ID" NUMBER,
	"LEVEL_VALUE" NUMBER DEFAULT '1' NOT NULL,
	 CONSTRAINT "ASSESSMENT_LEVEL_PK" PRIMARY KEY ("ASSESSMENT_LEVEL_ID")
);

--CREATE SEQUENCE ASSESSMENT_LEVEL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "USER_QUALIFICATION"
(	"QUALIFICATION_ID" NUMBER NOT NULL,
	"NAME" NVARCHAR2(128) NOT NULL,
	"LEVEL_NAME" NVARCHAR2(20) NOT NULL,
	"EXPIRED_TIME" TIMESTAMP (6),
	"CREATED_DATE" TIMESTAMP (6),
	"UPDATED_DATE" TIMESTAMP (6),
	"CREATED_BY" NUMBER,
	"UPDATED_BY" NUMBER,
	"IS_DELETED" NUMBER,
	"USER_PROFILE_ID" NUMBER,
	"SCALE_ID" NVARCHAR2(20),
	"ASSESSMENT_ID" NUMBER,
	"LEVEL_VALUE" NUMBER,
	"SUBMISSION_TIME" TIMESTAMP (6),
	 CONSTRAINT "PK_ASSESSMENT_QUALIFICATION" PRIMARY KEY ("QUALIFICATION_ID")
);


CREATE TABLE IF NOT EXISTS "JOB"
(	"JOB_ID" NUMBER NOT NULL,
	"JOB_NAME" NVARCHAR2(255) NOT NULL,
	"JOB_DESCRIPTION" NVARCHAR2(1000) NOT NULL,
	"CREATED_BY" NUMBER,
	"CREATED_DATE" TIMESTAMP (6) NOT NULL,
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" TIMESTAMP (6) NOT NULL,
	"IS_DELETED" NUMBER(99,0) NOT NULL,
	"COMPANY_ID" NUMBER,
	CONSTRAINT "JOB_PK" PRIMARY KEY ("JOB_ID"),
	CONSTRAINT "FK_JOB_TO_COMPANY" FOREIGN KEY ("COMPANY_ID")
  REFERENCES "COMPANY" ("COMPANY_ID")
);

--CREATE SEQUENCE IF NOT EXISTS JOB_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "LOCATION"
(	"LOCATION_ID" NUMBER NOT NULL,
     "CITY_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "COMPANY_ID" NUMBER,
     "ADDRESS" NVARCHAR2(255),
     "IS_USED" NUMBER(1,0) DEFAULT '0' NOT NULL,
     "IS_PRIMARY" NUMBER(1,0) DEFAULT '0' NOT NULL,
     CONSTRAINT "LOCATION_PK" PRIMARY KEY ("LOCATION_ID"),
     CONSTRAINT "FK_LOCATION_TO_COMPANY" FOREIGN KEY ("COMPANY_ID")
         REFERENCES "COMPANY" ("COMPANY_ID")
);

CREATE TABLE IF NOT EXISTS "VACANCY"
(	"VACANCY_ID" NUMBER NOT NULL,
     "LOGO" VARCHAR2(2000) NOT NULL,
     "COMPANY_ID" NUMBER NOT NULL,
     "JOB_ID" NUMBER NOT NULL,
     "CITY_ID" NUMBER,
     "SEARCH_CITY_ID" NUMBER,
     "CONTACT_PERSON_ID" NUMBER NOT NULL,
     "EDUCATION_ID" NUMBER,
     "SALARY" NUMBER,
     "IS_HOUR_SALARY" NUMBER(99,0),
     "WORKING_TYPE" NUMBER,
     "IS_ASAP" NUMBER(99,0),
     "EXPECTED_START_DATE" DATE,
     "SHORT_DESCRIPTION" NVARCHAR2(255),
     "ASSESSMENT_LEVEL" VARCHAR2(20),
     "STATUS" NUMBER(99,0) NOT NULL,
     "CURRENCY_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0),
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     "NUMBER_OF_SEAT" NUMBER,
     "FULL_DESCRIPTION" CLOB,
     "SEARCH_RANGE" NUMBER(2,0) NOT NULL,
     "SALARY_MAX" NUMBER,
     "JOB_LOCATION_ID" NUMBER,
     "SEARCH_LOCATION_ID" NUMBER,
     "START_SUSPEND_DATE" TIMESTAMP (6),
     "SUSPEND_DAYS" NUMBER(5,0),
     "ARCHIVIST_ID" NUMBER,
     CONSTRAINT "VACANCY_PK" PRIMARY KEY ("VACANCY_ID"),
     CONSTRAINT "VACANCY_TO_CITY" FOREIGN KEY ("CITY_ID")
         REFERENCES "CITY" ("CITY_ID"),
     CONSTRAINT "VACANCY_TO_COMPANY" FOREIGN KEY ("COMPANY_ID")
         REFERENCES "COMPANY" ("COMPANY_ID"),
     CONSTRAINT "VACANCY_TO_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
         REFERENCES "CURRENCY" ("CURRENCY_ID"),
     CONSTRAINT "VACANCY_TO_EDUCATION" FOREIGN KEY ("EDUCATION_ID")
         REFERENCES "EDUCATION" ("EDUCATION_ID"),
     CONSTRAINT "VACANCY_TO_JOB" FOREIGN KEY ("JOB_ID")
         REFERENCES "JOB" ("JOB_ID"),
     CONSTRAINT "VACANCY_TO_LOCATION_JOB" FOREIGN KEY ("JOB_LOCATION_ID")
         REFERENCES "LOCATION" ("LOCATION_ID"),
     CONSTRAINT "VACANCY_TO_LOCATION_SEARCH" FOREIGN KEY ("SEARCH_LOCATION_ID")
         REFERENCES "LOCATION" ("LOCATION_ID"),
     CONSTRAINT "VACANCY_TO_SEARCH_CITY" FOREIGN KEY ("SEARCH_CITY_ID")
         REFERENCES "CITY" ("CITY_ID"),
     CONSTRAINT "VACANCY_TO_STAFF" FOREIGN KEY ("CONTACT_PERSON_ID")
         REFERENCES "STAFF" ("STAFF_ID"),
     CONSTRAINT "VACANCY_TO_STAFF_ARCHIVIST" FOREIGN KEY ("ARCHIVIST_ID")
         REFERENCES "STAFF" ("STAFF_ID")
);

CREATE TABLE IF NOT EXISTS "USER_CURRICULUM_VITAE"
(	"CURRICULUM_VITAE_ID" NUMBER(99,0) NOT NULL,
     "IS_HOUR_SALARY" NUMBER(1,0),
     "MIN_SALARY" NUMBER(99,0),
     "MAX_SALARY" NUMBER(99,0),
     "EDUCATION_ID" NUMBER(99,0),
     "IS_ASAP" NUMBER(1,0),
     "EXPECTED_START_DATE" DATE,
     "IS_FULL_TIME" NUMBER(1,0),
     "USER_PROFILE_ID" NUMBER NOT NULL,
     "CURRENCY_ID" NUMBER,
     "SOCIAL_LINKS" VARCHAR2(4000),
     "IS_DELETED" NUMBER(1,0) NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "HAS_PERSONALITY" NUMBER DEFAULT '0' NOT NULL,
     CONSTRAINT "CV_PROFILE_PK" PRIMARY KEY ("CURRICULUM_VITAE_ID"),
     CONSTRAINT "USER_CURRICULUM_VITAE_USER_ID" UNIQUE ("USER_PROFILE_ID"),
     CONSTRAINT "CV_PROFILE_TO_CURRENCY" FOREIGN KEY ("CURRENCY_ID")
         REFERENCES "CURRENCY" ("CURRENCY_ID"),
     CONSTRAINT "CV_PROFILE_TO_USER_PROFILE" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_PROFILE" ("USER_PROFILE_ID"),
     CONSTRAINT "USER_CURRICULUM_VITAE_FK1" FOREIGN KEY ("EDUCATION_ID")
         REFERENCES "EDUCATION" ("EDUCATION_ID")
);

CREATE TABLE IF NOT EXISTS "VACANCY_CANDIDATE"
(	"ID" NUMBER NOT NULL,
     "VACANCY_ID" NUMBER NOT NULL,
     "CANDIDATE_STATUS" NUMBER(99,0) NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     "CANDIDATE_ID" NUMBER NOT NULL,
     "ARCHIVIST_ID" NUMBER NOT NULL,
     CONSTRAINT "VACANCY_CANDIDATES_PK" PRIMARY KEY ("ID"),
     CONSTRAINT "FK_CANDIDATES_TO_VACANCY" FOREIGN KEY ("VACANCY_ID")
         REFERENCES "VACANCY" ("VACANCY_ID"),
     CONSTRAINT "VACANCY_CANDIDATE_TO_STAFF" FOREIGN KEY ("ARCHIVIST_ID")
         REFERENCES "STAFF" ("STAFF_ID"),
     CONSTRAINT "VACANCY_CANDIDATE_TO_USER_CV" FOREIGN KEY ("CANDIDATE_ID")
         REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID")
);

COMMENT ON COLUMN "VACANCY_CANDIDATE"."CANDIDATE_STATUS" IS '1: Recruited';
--CREATE SEQUENCE IF NOT EXISTS VACANCY_CANDIDATE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "APPOINTMENT"
(	"APPOINTMENT_ID" NUMBER NOT NULL,
     "LOCATION_ID" NUMBER(99,0),
     "APPOINTMENT_DATE" DATE,
     "STAFF_ID" NUMBER NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "CREATED_DATE" DATE NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" DATE NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "VACANCY_ID" NUMBER NOT NULL,
     "TYPE" NUMBER(99,0) NOT NULL,
     "FROM_DATE" TIMESTAMP (6),
     CONSTRAINT "APPOINTMENT_PK" PRIMARY KEY ("APPOINTMENT_ID"),
     CONSTRAINT "APPOINTMENT_TO_STAFF" FOREIGN KEY ("STAFF_ID")
         REFERENCES "STAFF" ("STAFF_ID"),
     CONSTRAINT "APPOINTMENT_TO_VACANCY" FOREIGN KEY ("VACANCY_ID")
         REFERENCES "VACANCY" ("VACANCY_ID")
);

CREATE TABLE IF NOT EXISTS "APPOINTMENT_DETAIL"
(	"APPOINTMENT_DETAIL_ID" NUMBER NOT NULL,
     "APPOINTMENT_ID" NUMBER NOT NULL,
     "CURRICULUM_VITAE_ID" NUMBER NOT NULL,
     "APPOINTMENT_TIME" TIMESTAMP (6),
     "IS_DELETED" NUMBER NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "STATUS" NUMBER,
     CONSTRAINT "APPOINTMENT_DETAIL_PK" PRIMARY KEY ("APPOINTMENT_DETAIL_ID"),
     CONSTRAINT "APTM_DETAIL_TO_APPOINTMENT" FOREIGN KEY ("APPOINTMENT_ID")
         REFERENCES "APPOINTMENT" ("APPOINTMENT_ID"),
     CONSTRAINT "APTM_DETAIL_TO_USER_CV" FOREIGN KEY ("CURRICULUM_VITAE_ID")
         REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID")
);

COMMENT ON COLUMN "APPOINTMENT_DETAIL"."STATUS" IS 'PENDING(1),  ACCEPTED(2),   DECLINED(3),    CANCELED(4),    CHANGED(5)';

CREATE TABLE IF NOT EXISTS "APPOINTMENT_TIME_RANGE"
(	"ID" NUMBER NOT NULL,
     "APPOINTMENT_ID" NUMBER NOT NULL,
     "APPOINTMENT_TIME" TIMESTAMP (6) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     "IS_DELETED" NUMBER DEFAULT 0,
     CONSTRAINT "PK_APPOINTMENT_TIME_RANGE" PRIMARY KEY ("ID"),
     CONSTRAINT "APTM_TIME_RANGE_TO_APPOINTMENT" FOREIGN KEY ("APPOINTMENT_ID")
         REFERENCES "APPOINTMENT" ("APPOINTMENT_ID")
);

CREATE TABLE IF NOT EXISTS "APPOINTMENT_DATE_RANGE"
(	"ID" NUMBER NOT NULL,
     "APPOINTMENT_ID" NUMBER NOT NULL,
     "APPOINTMENT_DATE" TIMESTAMP (6) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     "IS_DELETED" NUMBER DEFAULT 0,
     CONSTRAINT "PK_APPOINTMENT_DATE_RANGE" PRIMARY KEY ("ID"),
     CONSTRAINT "APTM_DATE_RANGE_TO_APPOINTMENT" FOREIGN KEY ("APPOINTMENT_ID")
         REFERENCES "APPOINTMENT" ("APPOINTMENT_ID")
);

CREATE TABLE IF NOT EXISTS "VACANCY_LANGUAGE"
(	"VACANCY_ID" NUMBER NOT NULL,
     "LANGUAGE_ID" NUMBER NOT NULL,
     "VACANCY_LANGUAGE_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "IS_NATIVE" NUMBER,
     CONSTRAINT "VACANCY_LANGUAGE_PK" PRIMARY KEY ("VACANCY_LANGUAGE_ID"),
     CONSTRAINT "VACANCY_LANGUAGE_TO_LANGUAGE" FOREIGN KEY ("LANGUAGE_ID")
         REFERENCES "LANGUAGE" ("LANGUAGE_ID"),
     CONSTRAINT "VACANCY_LANGUAGE_TO_VACANCY" FOREIGN KEY ("VACANCY_ID")
         REFERENCES "VACANCY" ("VACANCY_ID")
);

CREATE TABLE IF NOT EXISTS "VACANCY_DESIRED_HOUR"
(	"VACANCY_DESIRED_HOUR_ID" NUMBER NOT NULL,
     "VACANCY_ID" NUMBER NOT NULL,
     "WORKING_HOUR_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     CONSTRAINT "VACANCY_WORKING_HOUR_PK" PRIMARY KEY ("VACANCY_DESIRED_HOUR_ID"),
     CONSTRAINT "VACANCY_WORKING_HOUR_FK1" FOREIGN KEY ("VACANCY_ID")
         REFERENCES "VACANCY" ("VACANCY_ID"),
     CONSTRAINT "VACANCY_WORKING_HOUR_FK2" FOREIGN KEY ("WORKING_HOUR_ID")
         REFERENCES "WORKING_HOUR" ("WORKING_HOUR_ID")
);

CREATE TABLE IF NOT EXISTS "VACANCY_SOFT_SKILL"
(	"VACANCY_ID" NUMBER NOT NULL,
     "SOFT_SKILL_ID" NUMBER NOT NULL,
     "VACANCY_SOFT_SKILL_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     CONSTRAINT "VACANCY_SOFT_SKILLS_PK" PRIMARY KEY ("VACANCY_SOFT_SKILL_ID"),
     CONSTRAINT "VACANCY_SOFT_SKILLS_FK1" FOREIGN KEY ("SOFT_SKILL_ID")
         REFERENCES "SOFT_SKILL" ("SOFT_SKILL_ID"),
     CONSTRAINT "VACANCY_SOFT_SKILLS_TO_VACANCY" FOREIGN KEY ("VACANCY_ID")
         REFERENCES "VACANCY" ("VACANCY_ID")
);

CREATE TABLE IF NOT EXISTS "VACANCY_BENEFIT"
(	"VACANCY_ID" NUMBER NOT NULL,
     "BENEFIT_ID" NUMBER NOT NULL,
     "VACANCY_BENEFIT_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     CONSTRAINT "VACANCY_BENEFITS_PK" PRIMARY KEY ("VACANCY_BENEFIT_ID"),
     CONSTRAINT "VACANCY_BENEFITS_TO_BENEFIT" FOREIGN KEY ("BENEFIT_ID")
         REFERENCES "BENEFIT" ("BENEFIT_ID"),
     CONSTRAINT "VACANCY_BENEFITS_TO_VACANCY" FOREIGN KEY ("VACANCY_ID")
         REFERENCES "VACANCY" ("VACANCY_ID")
);

CREATE TABLE IF NOT EXISTS "VACANCY_ASSESSMENT_LEVEL"
(	"VACANCY_ASSESSMENT_LEVEL_ID" NUMBER NOT NULL,
     "ASSESSMENT_LEVEL_ID" NUMBER NOT NULL,
     "VACANCY_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     CONSTRAINT "VACANCY_ASMT_LV_PK" PRIMARY KEY ("VACANCY_ASSESSMENT_LEVEL_ID"),
     CONSTRAINT "VACANCY_ASMT_LV_TO_ASMT_LV" FOREIGN KEY ("ASSESSMENT_LEVEL_ID")
         REFERENCES "ASSESSMENT_LEVEL" ("ASSESSMENT_LEVEL_ID"),
     CONSTRAINT "VACANCY_ASMT_LV_TO_VACANCY" FOREIGN KEY ("VACANCY_ID")
         REFERENCES "VACANCY" ("VACANCY_ID")
);

CREATE TABLE IF NOT EXISTS "MESSAGE_TEMPLATE"
(	"ID" NUMBER NOT NULL,
	"LANGUAGE_CODE" VARCHAR2(255) NOT NULL,
	"CONTENT" CLOB NOT NULL,
	"IS_DELETED" NUMBER(2,0) DEFAULT 0 NOT NULL,
	"CREATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
	"UPDATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
	 CONSTRAINT "MESSAGE_TEMPLATE_PK" PRIMARY KEY ("ID")
) ;

--CREATE SEQUENCE IF NOT EXISTS MESSAGE_TEMPLATE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "CURRICULUM_VITAE_JOB"
(	"CURRICULUM_VITAE_ID" NUMBER NOT NULL,
     "JOB_ID" NUMBER NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "IS_DELETED" NUMBER(1,0) NOT NULL,
     "CURRICULUM_VITAE_JOB_ID" NUMBER NOT NULL,
     CONSTRAINT "CURRICULUM_VITAE_JOB_PK" PRIMARY KEY ("CURRICULUM_VITAE_JOB_ID"),
     CONSTRAINT "CURRICULUM_VITAE_JOB_UK1" UNIQUE ("CURRICULUM_VITAE_ID", "JOB_ID"),
     CONSTRAINT "CURRICULUM_VITAE_JOB_FK1" FOREIGN KEY ("JOB_ID")
         REFERENCES "JOB" ("JOB_ID"),
     CONSTRAINT "CURRICULUM_VITAE_JOB_FK2" FOREIGN KEY ("CURRICULUM_VITAE_ID")
         REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID")
);

CREATE TABLE IF NOT EXISTS "USER_LANGUAGE"
(	"USER_PROFILE_ID" NUMBER NOT NULL,
     "LANGUAGE_ID" NUMBER NOT NULL,
     "IS_NATIVE" NUMBER(99,0) NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "USER_LANGUAGE_ID" NUMBER DEFAULT NULL NOT NULL,
     CONSTRAINT "USER_LANGUAGE_PK" PRIMARY KEY ("USER_LANGUAGE_ID"),
     CONSTRAINT "USER_LANGUAGE_TO_LANGUAGE" FOREIGN KEY ("LANGUAGE_ID")
         REFERENCES "LANGUAGE" ("LANGUAGE_ID"),
     CONSTRAINT "USER_LANGUAGE_TO_PROFILE" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_PROFILE" ("USER_PROFILE_ID")
);

CREATE TABLE IF NOT EXISTS "USER_DESIRED_HOUR"
(	"WORKING_HOUR_ID" NUMBER(99,0) NOT NULL,
     "CURRICULUM_VITAE_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0) NOT NULL,
     "CREATED_BY" NUMBER NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) NOT NULL,
     "UPDATED_BY" NUMBER NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) NOT NULL,
     "USER_DESIRED_HOUR_ID" NUMBER NOT NULL,
     CONSTRAINT "USER_DESIRED_HOUR_PK" PRIMARY KEY ("USER_DESIRED_HOUR_ID"),
     CONSTRAINT "USER_DESIRED_HOUR_UK1" UNIQUE ("WORKING_HOUR_ID", "CURRICULUM_VITAE_ID"),
     CONSTRAINT "USER_DESIRED_HOUR_FK1" FOREIGN KEY ("WORKING_HOUR_ID")
         REFERENCES "WORKING_HOUR" ("WORKING_HOUR_ID"),
     CONSTRAINT "USER_DESIRED_HOUR_FK2" FOREIGN KEY ("CURRICULUM_VITAE_ID")
         REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID")
);

CREATE TABLE IF NOT EXISTS "USER_BENEFIT"
(	"CURRICULUM_VITAE_ID" NUMBER NOT NULL,
     "BENEFIT_ID" NUMBER NOT NULL,
     "USER_BENEFIT_ID" NUMBER NOT NULL,
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     "IS_DELETED" NUMBER(99,0),
     CONSTRAINT "USER_BENEFIT_PK" PRIMARY KEY ("USER_BENEFIT_ID"),
     CONSTRAINT "USER_BENEFIT_FK1" FOREIGN KEY ("CURRICULUM_VITAE_ID")
         REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID"),
     CONSTRAINT "USER_BENEFIT_FK2" FOREIGN KEY ("BENEFIT_ID")
         REFERENCES "BENEFIT" ("BENEFIT_ID")
);

CREATE TABLE IF NOT EXISTS "USER_SOFT_SKILL"
(	"USER_PROFILE_ID" NUMBER NOT NULL,
     "SOFT_SKILL_ID" NUMBER NOT NULL,
     "USER_SOFT_SKILL_ID" NUMBER NOT NULL,
     "IS_DELETED" NUMBER(99,0),
     "CREATED_BY" NUMBER,
     "CREATED_DATE" TIMESTAMP (6),
     "UPDATED_BY" NUMBER,
     "UPDATED_DATE" TIMESTAMP (6),
     CONSTRAINT "USER_SOFT_SKILL_PK" PRIMARY KEY ("USER_SOFT_SKILL_ID"),
     CONSTRAINT "SOFT_SKILL_TO_USER_PROFILE" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID"),
     CONSTRAINT "USER_SOFT_SKILL_TO_SOFT_SKILL" FOREIGN KEY ("SOFT_SKILL_ID")
         REFERENCES "SOFT_SKILL" ("SOFT_SKILL_ID")
);

CREATE TABLE IF NOT EXISTS "PROFILE_ATTRIBUTE"
(	"ID" NUMBER NOT NULL,
     "NAME" VARCHAR2(255) NOT NULL,
     "DESCRIPTION" VARCHAR2(255) NOT NULL,
     "IS_DELETED" NUMBER(2,0) DEFAULT 0 NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "CREATED_BY" NUMBER,
     "UPDATED_BY" NUMBER,
     CONSTRAINT "PK_PROFILE_ATTRIBUTE" PRIMARY KEY ("ID")
);

--CREATE SEQUENCE IF NOT EXISTS  "PROFILE_ATTRIBUTE_SEQ"  MINVALUE 1 INCREMENT BY 1 START WITH 10000 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "ATTRIBUTE_EVENT"
(	"ID" NUMBER NOT NULL,
     "PROFILE_ATTRIBUTE_ID" NUMBER NOT NULL,
     "EVENT_CODE" NUMBER NOT NULL,
     "SCORE" NUMBER DEFAULT 0 NOT NULL,
     "IS_REPEATABLE" NUMBER(2,0) DEFAULT 0 NOT NULL,
     "IS_DELETED" NUMBER(2,0) DEFAULT 0 NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "CREATED_BY" NUMBER,
     "UPDATED_BY" NUMBER,
     CONSTRAINT "PK_ATTRIBUTE_EVENT" PRIMARY KEY ("ID"),
     CONSTRAINT "fk-attr-event-attr-id" FOREIGN KEY ("PROFILE_ATTRIBUTE_ID")
         REFERENCES "PROFILE_ATTRIBUTE" ("ID")
);

--CREATE SEQUENCE IF NOT EXISTS  "ATTRIBUTE_EVENT_SEQ"  MINVALUE 1 INCREMENT BY 1 START WITH 1000 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "USER_ATTRIBUTE"
(	"ID" NUMBER NOT NULL,
     "USER_PROFILE_ID" NUMBER NOT NULL,
     "PROFILE_ATTRIBUTE_ID" NUMBER NOT NULL,
     "SCORE" NUMBER DEFAULT 0 NOT NULL,
     "LEVEL" NUMBER DEFAULT 0 NOT NULL,
     "IS_NEW_LEVEL" NUMBER(2,0) DEFAULT 0 NOT NULL,
     "IS_DELETED" NUMBER(2,0) DEFAULT 0 NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "CREATED_BY" NUMBER,
     "UPDATED_BY" NUMBER,
     CONSTRAINT "PK_USER_ATTRIBUTE" PRIMARY KEY ("ID"),
     CONSTRAINT "fk-user-attr-attr-id" FOREIGN KEY ("PROFILE_ATTRIBUTE_ID")
         REFERENCES "PROFILE_ATTRIBUTE" ("ID"),
     CONSTRAINT "fk-user-attr-user-id" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_PROFILE" ("USER_PROFILE_ID")
);

--CREATE SEQUENCE IF NOT EXISTS  "USER_ATTRIBUTE_SEQ"  MINVALUE 1 INCREMENT BY 1 START WITH 1000 ORDER CACHE 20;

CREATE TABLE IF NOT EXISTS "USER_ATTRIBUTE_EVENT"
(	"ID" NUMBER NOT NULL,
     "USER_PROFILE_ID" NUMBER NOT NULL,
     "PROFILE_ATTRIBUTE_ID" NUMBER,
     "EVENT_CODE" NUMBER NOT NULL,
     "COUNT" NUMBER DEFAULT 0 NOT NULL,
     "IS_DELETED" NUMBER(2,0) DEFAULT 0 NOT NULL,
     "CREATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "UPDATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL,
     "CREATED_BY" NUMBER,
     "UPDATED_BY" NUMBER,
     CONSTRAINT "PK_USER_ATTRIBUTE_EVENT" PRIMARY KEY ("ID"),
     CONSTRAINT "fk-user-attr-event-user-id" FOREIGN KEY ("USER_PROFILE_ID")
         REFERENCES "USER_PROFILE" ("USER_PROFILE_ID"),
     CONSTRAINT "fk-user-attr-event-attr-id" FOREIGN KEY ("PROFILE_ATTRIBUTE_ID")
         REFERENCES "PROFILE_ATTRIBUTE" ("ID")
);

--CREATE SEQUENCE IF NOT EXISTS  "USER_ATTRIBUTE_EVENT_SEQ"  MINVALUE 1 INCREMENT BY 1 START WITH 1000  ORDER CACHE 20;

-- DDL generated by DBeaver
-- WARNING: It may differ from actual native database DDL

-- Drop table

-- DROP TABLE QOOCO_PHUC.VACANCY_SEAT


  CREATE TABLE "VACANCY_SEAT"
   (	"ID" NUMBER NOT NULL ,
	"VACANCY_ID" NUMBER NOT NULL ,
	"STATUS" NUMBER(2,0) NOT NULL ,
	"CREATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL ,
	"CLOSED_DATE" TIMESTAMP (6) DEFAULT NULL,
	"SUSPEND_FROM_DATE" TIMESTAMP (6) DEFAULT NULL,
	"SUSPENDED_DAYS" NUMBER,
	"RESPONSIBLE_STAFF_ID" NUMBER NOT NULL ,
	"CLOSED_STAFF_ID" NUMBER,
	"USER_CV_ID" NUMBER,
	"END_SUSPEND_DATE" TIMESTAMP (6),
	 CONSTRAINT "PK_VACANCY_SEAT" PRIMARY KEY ("ID"),
	 CONSTRAINT "fk-vacancy-seat-cv-id" FOREIGN KEY ("USER_CV_ID")
	  REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID") ,
	 CONSTRAINT "fk-vacancy-seat-closed-id" FOREIGN KEY ("CLOSED_STAFF_ID")
	  REFERENCES "STAFF" ("STAFF_ID") ,
	 CONSTRAINT "fk-vacancy-seat-responsible" FOREIGN KEY ("RESPONSIBLE_STAFF_ID")
	  REFERENCES "STAFF" ("STAFF_ID") ,
	 CONSTRAINT "fk-vacancy-seat-vacancy-id" FOREIGN KEY ("VACANCY_ID")
	  REFERENCES "VACANCY" ("VACANCY_ID")
   );


CREATE TABLE APPOINTMENT_FEEDBACK (
	ID NUMBER,
	STAFF_ID NUMBER,
	APPOINTMENT_DETAIL_ID NUMBER,
	FEEDBACK_DATE TIMESTAMP,
	STATUS NUMBER(2,0),
	CREATED_BY NUMBER,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_BY NUMBER,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	IS_DELETED NUMBER DEFAULT 0,
	CONSTRAINT PK_APPOINTMENT_FEEDBACK PRIMARY KEY (ID),
	CONSTRAINT "fk-apt-feedback-apt-event-id" FOREIGN KEY (APPOINTMENT_DETAIL_ID) REFERENCES APPOINTMENT_DETAIL(APPOINTMENT_DETAIL_ID),
	CONSTRAINT "fk-apt-feedback-staff-id" FOREIGN KEY (STAFF_ID) REFERENCES STAFF(STAFF_ID)
) ;


 CREATE TABLE "USER_PREFERRED_HOTEL" (
    "ID" NUMBER NOT NULL ,
	"CURRICULUM_VITAE_ID" NUMBER NOT NULL ,
	"COMPANY_ID" NUMBER NOT NULL ,
	"IS_DELETED" NUMBER(2,0) DEFAULT 0 NOT NULL ,
	"CREATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL ,
	"UPDATED_DATE" TIMESTAMP (6) DEFAULT sysdate NOT NULL ,
	"CREATED_BY" NUMBER,
	"UPDATED_BY" NUMBER,
	 CONSTRAINT "PK_USER_PREFERRED_HOTEL" PRIMARY KEY ("ID"),
	 CONSTRAINT "fk-preferred-hotel-user-cv-id" FOREIGN KEY ("CURRICULUM_VITAE_ID")
	  REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID") ,
	 CONSTRAINT "fk-preferred-hotel-company-id" FOREIGN KEY ("COMPANY_ID")
	  REFERENCES "COMPANY" ("COMPANY_ID")
) ;

CREATE TABLE COUNTRY_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE PROVINCE_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE HOTEL_TYPE_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE COMPANY_ROLE_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE JOB_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE BENEFIT_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE SOFT_SKILL_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE LANGUAGE_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE CURRENCY_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE EDUCATION_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE PA_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	TYPE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE PAQ_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;

CREATE TABLE PAQT_LOCALIZATION (
	ID NUMBER,
	LOCALE VARCHAR2(255),
	CONTENT CLOB,
	IS_DELETED NUMBER(2,0) DEFAULT 0 ,
	CREATED_DATE TIMESTAMP DEFAULT sysdate ,
	UPDATED_DATE TIMESTAMP DEFAULT sysdate ,
	CREATED_BY NUMBER,
	UPDATED_BY NUMBER
) ;


CREATE TABLE "USER_PREVIOUS_POSITION"
   (	"USER_PREVIOUS_POSITION_ID" NUMBER NOT NULL,
	"START_DATE" DATE NOT NULL,
	"END_DATE" DATE,
	"SALARY" NUMBER(99,0),
	"CONTACT_PERSON" VARCHAR2(1000 BYTE),
	"IS_DELETED" NUMBER(99,0) NOT NULL,
	"CREATED_BY" NUMBER NOT NULL,
	"CREATED_DATE" TIMESTAMP (6) NOT NULL,
	"UPDATED_BY" NUMBER NOT NULL ENABLE,
	"UPDATED_DATE" TIMESTAMP (6) NOT NULL,
	"USER_CURRICULUM_VITAE_ID" NUMBER,
	"PHOTO" CLOB,
	"COMPANY_NAME" NVARCHAR2(1000) NOT NULL,
	"POSITION_NAME" NVARCHAR2(1000) NOT NULL,
	"CURRENCY_ID" NUMBER NOT NULL,
	 CONSTRAINT "PREVIOUS_POSITION_PK" PRIMARY KEY ("USER_PREVIOUS_POSITION_ID"),
	 CONSTRAINT "PREVIOUS_POSITION_TO_CV" FOREIGN KEY ("USER_CURRICULUM_VITAE_ID") REFERENCES "USER_CURRICULUM_VITAE" ("CURRICULUM_VITAE_ID")
   );


CREATE TABLE "USER_WALLET"
   (	"USER_PROFILE_ID" NUMBER NOT NULL,
	"BOOST_COINS" NUMBER NOT NULL,
	"CREATED_DATE" TIMESTAMP (6),
	"UPDATED_DATE" TIMESTAMP (6),
	"CREATED_BY" NUMBER,
	"UPDATED_BY" NUMBER,
	"IS_DELETED" NUMBER,
	 CONSTRAINT "PK_REFERRAL_COUNT" PRIMARY KEY ("USER_PROFILE_ID")
   );

CREATE SEQUENCE USER_WALLET_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE LANGUAGE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_BENEFIT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_SUSPEND_HISTORY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE REFERRAL_GIFT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_PREVIOUS_POSITION_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE CURRENCY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_SOFT_SKILL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_QUALIFICATION_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE APPOINTMENT_TIME_RANGE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_FIT_LANGUAGE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE COUNTRY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_PROCESSING_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_SUSPEND_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_DESIRED_HOUR_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_LANGUAGE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE EDUCATION_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_ARCHIVED_HISTORY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_CURRICULUM_VITAE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE APPOINTMENT_DETAIL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE ASSESSMENT_PERSONAL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE BENEFIT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_ACCESS_TOKEN_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE MESSAGE_TEMPLATE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE HOTEL_TYPE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_CANDIDATES_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE ASSESSMENT_QUALITY_TYPE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_DESIRED_HOUR_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE REQUIRED_ASSESSMENT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE PATA_FILE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE PERMISSION_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE COMPANY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE REFERRAL_ASSESSMENT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE STAFF_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE COMPANY_JOIN_REQUEST_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_ASSESSMENT_LEVEL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_SOFT_SKILL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE PROFILE_ATTRIBUTE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE ASSESSMENT_PERSONAL_QUES_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_LANGUAGE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE PROVINCE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE REFERRAL_CODE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE SOFT_SKILL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE APPOINTMENT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE CURRICULUM_VITAE_JOB_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE ASSESSMENT_LEVEL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_ATTRIBUTE_EVENT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE JOB_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE ROLE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_BENEFIT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE APPOINTMENT_DATE_RANGE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_CANDIDATE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE APP_VERSION_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_PERSONALITY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE REFERRAL_REDEEM_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE WORKING_HOUR_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE VACANCY_SEAT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE LOCATION_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE CITY_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_ATTRIBUTE_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE REFERRAL_CLAIM_GIFT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE ATTRIBUTE_EVENT_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE APPOINTMENT_FEEDBACK_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;
CREATE SEQUENCE USER_PREFERRED_HOTEL_SEQ MINVALUE 1 START WITH 1000 INCREMENT BY 1 ORDER CACHE 20;

Insert into USER_PROFILE (USER_PROFILE_ID,USERNAME,FIRST_NAME,LAST_NAME,GENDER,AVATAR,BIRTHDAY,PHONE_NUMBER,ADDRESS,COUNTRY_ID,NATIONAL_ID,CREATED_BY,CREATED_DATE,UPDATED_BY,UPDATED_DATE,IS_DELETED,EMAIL,IS_ADMIN,DEFAULT_COMPANY,CITY_ID,PROFILE_STEP,FIT_FIRST_NAME,FIT_LAST_NAME,FIT_AVATAR,FIT_GENDER,FIT_PHONE_NUMBER,FIT_BIRTHDAY,FIT_NATIONAL_ID,FIT_ADDRESS,FIT_PROFILE_STEP) values
(1000528950,'SPELDY4','Maria','Rivera',1,'/1000528950/avatar/ocJRe66g1741962537823211888.jpg',to_date('16-JUL-00','DD-MON-RR'),'+66 12313442',null,null,'TH 1237743',null,to_timestamp('21-MAR-19 04.05.32.794000000 AM','DD-MON-RR HH.MI.SSXFF AM'),null,to_timestamp('21-MAR-19 04.05.32.794000000 AM','DD-MON-RR HH.MI.SSXFF AM'),0,'speldy4@mailinator.com',0,null,56,5,null,null,null,null,null,null,null,null,null);

Insert into USER_ACCESS_TOKEN (USER_PROFILE_ID,TOKEN,REFRESH_TOKEN,TYPE,ACCESS_TOKEN_ID,CHANNEL_ID,CREATED_DATE,IS_DELETED,CREATED_BY,UPDATED_DATE,UPDATED_BY,SIGN_IN_ID,SESSION_ID,DEVICE_TYPE,PUBLIC_KEY,COMPANY_ID) values
(1000528950,'bfa611e0ecd443b487f1e392f46a67ba206acdf6b294d9223b6ec7b3df36ef60','bfa611e0ecd443b487f1e392f46a67ba206acdf6b294d9223b6ec7b3df36ef60',1,94451,null,to_timestamp('21-MAR-19 09.21.02.244000000 AM','DD-MON-RR HH.MI.SSXFF AM'),0,1000528950,to_timestamp('21-MAR-19 09.21.02.244000000 AM','DD-MON-RR HH.MI.SSXFF AM'),1000528950,'75761311DD0ED49ACC610CEB181C002C','75761311DD0ED49ACC610CEB181C002C',4,'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2bNuOR9unEYlmQdwbl6DIRSrsLHjnvFfewRSfVsdajHXRdwBa3hWIRBLGzm33b+mQmQTLrOZzgtma8fh9bhQZQxH4YblwdKEjiwC1cdWsQlo/mGpk7HY/xYNpzNjDzxeAkvKJoJQ9QHYpbhuuTUP0PMZ2CBLB80KWh4rwDrlC9JOvoiFvl1cOb2fGjZCgDdV4aekr8brOBQThGiUtPAlMqUC0fQb8yY4d57YB+9fijIDBFESj+EpT7IJB+QLMOpVy1FS7Ig4BHLdjnX/w2aZY42gdGE1z3eLKEcIY58PTEejvyDdMVVQIUKhKm/DOf6wxe3Gur4mRcP21FgSdm3ZxQIDAQAB',null);

-- must be last statement
SET LOCK_MODE 1;
